# Count with range filter on encodings using SIMD

## Project structure:
### ./.vscode: use this to run over vscode and specific c/cpp compilers, cflags: -mavx, -mavx2
### ./data: holds demo and compressed/encoded data -> as blocks 
### ./encoder: fast write, readand I/O tuning for generating encoded data/read encoded files and load SIMD vectors
### ./query: it contains the codes for exp: based on simd fast partial sum, pruning, and quantile querying...


## To use
### 0: U can prepare ur own dataset to encode by ./encode:

g++ -O3 ./encode/encoder.hpp encoder.cc -o encode

And run:

bash ./encode

Also by the VSCode:
select folder -> Compile and Run.

Dataset SPECIFY: see ./encode/encoder.cc  We give some demos here.

### 1 Integrated test/debug over the VSCode platform
### 2 OR: use shell/terminal/ps: 

g++ -O3 -mavx -mavx2 ./query/optcntVFq.hpp ./query/optcntVFq.cc -o cntvf

### 3. to run:
Use the compiled file from debug(generated by VSCode compiling),
Or use: 

bash ./cntvf

### Note: The following link will soon available, but some efforts are still needed to integrate the CPP packages to a JVM-based project.
https://github.com/apache/iotdb/tree/research/count-SIMD
